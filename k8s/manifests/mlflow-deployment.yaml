apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  namespace: ml-pipeline
  labels:
    app: mlflow-server
    component: experiment-tracking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-server
  template:
    metadata:
      labels:
        app: mlflow-server
    spec:
      containers:
      - name: mlflow-server
        image: python:3.11-slim
        command:
        - /bin/bash
        - -c
        - |
          pip install mlflow[extras] psycopg2-binary boto3
          mlflow server \
            --host 0.0.0.0 \
            --port 5000 \
            --backend-store-uri postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/$(POSTGRES_DB) \
            --default-artifact-root s3://$(S3_BUCKET)/mlflow-artifacts/ \
            --serve-artifacts
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          value: "mlflow"
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: s3-bucket
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-access-key
        - name: AWS_DEFAULT_REGION
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: aws-region
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: ml-pipeline
  labels:
    app: mlflow-server
spec:
  selector:
    app: mlflow-server
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mlflow-config
  namespace: ml-pipeline
data:
  s3-bucket: "ml-e2e-project-artifacts"
  aws-region: "us-east-1"
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-secret
  namespace: ml-pipeline
type: Opaque
data:
  access-key-id: ""  # Base64 encoded AWS Access Key ID
  secret-access-key: ""  # Base64 encoded AWS Secret Access Key
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: ml-pipeline
type: Opaque
data:
  username: bWxmbG93  # Base64 encoded "mlflow"
  password: ""  # Base64 encoded password - replace with actual password